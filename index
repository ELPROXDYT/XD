const express = require('express')
const app = express()
const Discord = require("discord.js");
const fs = require("fs");
const client = new Discord.Client({ partials: ["MESSAGE", "CHANNEL", "REACTION" ]});

client.commands = new Discord.Collection();
client.aliases = new Discord.Collection();
const embedt = require("./commandos/embed.js");
const noticacion = require("./noticacion.js");



let prefix = "e/";





const keepAlive = require('./server');
const Monitor = require('ping-monitor');
 
keepAlive();
const monitor = new Monitor({
    website: 'https://ELPRO01.nelsondiaz4.repl.co',
    title: 'Secundario',
    interval: 15 // minutes
});

client.on("ready", () => {
  console.log(`BOT Encendido!\n Server:${client.guilds.cache.size}.
  BOT ${client.user.username}`);
const array = [ //Definimos el array que tendr√° todos los posibles estados
  {
    name: `e/help`, //nombre del primer estado
    type: `WATCHING` //En este caso pondr√° viendo a 'algo'
  },
  {
    name: `http://bot.e2tilifo.tk/`, //Nombre del segundo estado
    type: `PLAYING` //En este caso ser√° jugando a 'Minecraft'
  },
   {
    name: `Server: ${client.guilds.cache.size}`, //Nombre del tercer estado
    type: `WATCHING` //Aqui ser√° el estado compitiendo, para los que no lo conozcan es un estado que tienen los bots y sale compitendo en ...
  }
]

    setInterval(() => {
        function presence() {
            client.user.setPresence({
              status: 'online', //Pondremos que el bot est√© online, si quieren pueden ponerlo en no molestar (dnd) o ausante (idle)
                activity: array[Math.floor(Math.random() * array.length)], //Aqui haremos que ponga la actividad aleatoriamente
            });
        }

        
        presence();
    }, 20000);
})


//////////////////////////MONITOR///////////////////////////

monitor.on('up', (res) => console.log(`${res.website} Vamos bien.`));
monitor.on('down', (res) => console.log(`${res.website} se ha ca√≠do - ${res.statusMessage}`));
monitor.on('stop', (website) => console.log(`${website} se ha parado.`) );
monitor.on('error', (error) => console.log(error));


//////////////////////////BOT REAL//////////////////////




const db = require("megadb")
require('dotenv').config();

client.on('guildUpdate', (oldGuild, newGuild) => {
 if(!oldGuild.member(client.user).hasPermission('VIEW_AUDIT_LOG')) return;
 oldGuild.fetchAuditLogs().then(logs => { 
  let userID = logs.entries.first().executor.id;
  let userAvatar = logs.entries.first().executor.avatarURL();
  if(oldGuild.name !== newGuild.name) {
    let msgChannel = new Discord.MessageEmbed()
      .setTitle('**[NUEVO NOMBRE DEL SERVIDOR]**')
      .setColor('RED')
      .setThumbnail(userAvatar)
      .setDescription(`**Nombre del canal editado correctamente**\nNombre anterior: **${oldGuild.name}**\nNuevo nombre: **${newGuild.name}**\nPor: <@${userID}> (ID: ${userID})`)
      .setTimestamp()
      .setFooter(oldGuild.name, oldGuild.iconURL())
      let channel = client.channels.cache.get('787975047356743701');
      channel.send(msgChannel);
   }
 })
})
client.on('channelUpdate', (oldChannel, newChannel) => {
  if(!oldChannel.guild) return;
  oldChannel.guild.fetchAuditLogs().then(logs => { 
     let userID = logs.entries.first().executor.id;
     if(oldChannel.name !== newChannel.name) {
      let msgName = new Discord.MessageEmbed()
      .setTitle('**[CANAL EDITADO]**')
      .setColor('RED')
      .setDescription(`**Canal editado**\nNombre anterior: **${oldChannel.name}**\nNuevo nombre: **${newChannel.name}**\nCanal ID: **${oldChannel.id}**\nPor: <@${userID}> (ID: ${userID})`)
      .setTimestamp()
      .addField(`Server:`, `${oldChannel.guild.name}`)
      .setFooter(oldChannel.guild.name, oldChannel.guild.iconURL())
      let channel = oldChannel.guild.channels.cache.get('787975047356743701');
      channel.send(msgName);
     }
  })
})


client.on("roleCreate", async (role, message) => {
let canal = client.channels.cache.get('787975047356743701') 
if(!canal) return console.log("La id del canal no existe.") 
let embedrolcreado = new Discord.MessageEmbed() 
.setTitle("**„Äé‚úÖ„Äè** Nuevo rol creado!")
.setDescription('‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî')
.setColor("RANDOM")
.setTimestamp()
.addField(`Server:`, `${message.guild.name}`)
.addField("Nombre del rol", role.name ,true)
.addField("Fecha de creacion", role.createdAt.toDateString() ,true) 
if(role.managed === false) {
embedrolcreado.addField("¬øEs un rol de Bot?", "No" ,true) 
} 
if(role.managed === true) { 
  embedrolcreado.addField("¬øEs un rol de Bot?", "Si" ,true) 
};
embedrolcreado.setThumbnail(role.guild.iconURL())
canal.send(embedrolcreado)
})

client.on("roleDelete", async (role, message) => {
let canal = client.channels.cache.get('787975047356743701') 
if(!canal) return console.log("La id del canal no existe.") 
let embedrolcreado = new Discord.MessageEmbed() 
.setTitle("**„Äé‚ùé„Äè** Rol Delete") 
.setDescription('‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî')
.setColor("RANDOM")
.setTimestamp()
.addField(`Server:`, `${message.guild.name}`)
.addField("Nombre del rol eliminado", role.name ,true)
if(role.managed === false) {
embedrolcreado.addField("¬øEra un rol de Bot?", "No" ,true) 
} 
if(role.managed === true) {
  embedrolcreado.addField("¬øEra un rol de Bot?", "Si" ,true) 
};
embedrolcreado.setThumbnail(role.guild.iconURL())
canal.send(embedrolcreado)
})


client.on("message", async message =>{
  if (message.author.bot) return;
  if (!message.content.startsWith(prefix)) return;

  const commandBody = message.content.slice(prefix.length);
  const args = commandBody.split(' ');
  const command = args.shift().toLowerCase();
 if(command=="premium"){
  var server = message.guild;
const embed = new Discord.MessageEmbed()
    .setTitle("PREMIUM") 
    .setAuthor(message.author.username, message.author.avatarURL()) 
    .setColor(0x00AE86) 
    .setDescription("Para Comprar el Premium")
    .setThumbnail(message.author.avatarURL())
    .addField("**WEB**: ", "[e2tilifo.tk](http://e2tilifo.tk/buy)")
    .addField(`Recuerda enviar verificacion al Dm mi nickname` , `${server.owner}`)
    message.channel.send(embed).then(m => m.delete({timeout: 80000})) 
  
}
})


client.on("message", async message =>{
  if (message.author.bot) return;
  if (!message.content.startsWith(prefix)) return;

  const commandBody = message.content.slice(prefix.length);
  const args = commandBody.split(' ');
  const command = args.shift().toLowerCase();

if(command === `botinvite`) {
    client
      .generateInvite([
        "ADMINISTRATOR",
        "MANAGE_CHANNELS",
        "MANAGE_ROLES",
        "MANAGE_MESSAGES",
        "SEND_MESSAGES",
        "CONNECT",
        "BAN_MEMBERS"
      ])
      .then(link => {
       message.channel.send("Link de invitaci√≥n: " + link).then(m => m.delete({timeout: 80000}))
      });
  }
})

client.on("message", async message =>{
  if (message.author.bot) return;
  if (!message.content.startsWith(prefix)) return;

  const commandBody = message.content.slice(prefix.length);
  const args = commandBody.split(' ');
  const command = args.shift().toLowerCase();

if(command === `winner`) {
message.channel.send("**Reacciona aca para participar en el sorteo**").then(msg => { 
msg.react("üíö")
const filter = (reaction, user) => reaction.emoji.name == 'üíö' && user.id !== client.user.id; 
const collector = msg.createReactionCollector(filter, {time: 20 * 6000});
var array = []
collector.on("collect", r => {
array.push(r.users.cache.last().id);
message.channel.send("Muy bien. El usuario "+r.users.cache.last().username+" se ha unido al sorteo.")
})
collector.on("end", () => {
const winner = array[Math.floor(Math.random() * array.length)] 
message.channel.send("Ganador <@"+winner+">")
})
})
}
})

client.on('roleUpdate', (oldRole, newRole) => {
 // verificamos si nuestro bot tiene permisos de ver el log de auditoria de un servidor
 if(!oldRole.guild.member(client.user).hasPermission('VIEW_AUDIT_LOG')) return;

 // Solicitamos los datos del logs de la auditoria registrado en un servidor
 oldRole.guild.fetchAuditLogs().then(logs => { 
  // Obtenemos el id de usuario autor del log
  let userID = logs.entries.first().executor.id;
  // Obtenemos el avatar de usuario autor del log
  let userAvatar = logs.entries.first().executor.avatarURL();

  // Verificamos que se haya actualizado el nombre de un rol
  if(oldRole.name !== newRole.name) {
    let embedroleditado = new Discord.MessageEmbed() 
      .setTitle('**[ACTUALIZACION DEL NOMBRE DE ROL]**')
      .setColor('RED')
      .setThumbnail(userAvatar)
      .setDescription(`**Nombre del rol editado correctamente**\nNombre anterior: **${oldRole.name}**\nNuevo nombre: **${newRole.name}**\nID rol: **${oldRole.id}**\nPor: <@${userID}> (ID: ${userID})`)
      .setTimestamp()
       .addField(`Server:`, `${message.guild.name}`)
      .setFooter(oldRole.guild.name, oldRole.guild.iconURL())
      
      // Enviamos el mensaje a un canal segun el ID-CANAL
      let channel = client.channels.cache.get('787975047356743701');
      channel.send(embedroleditado);
   }
 })
})
client.on("message", function(message) {
let RegMention = new RegExp(`^<@!?${client.user.id}>( |)$`); //Este es el RegExp que utilizaremos

if (message.content.match(RegMention)) { //Creamos la condicional
    message.channel.send(`Hola mi nombre es ${client.user} y para invitarme aqui 
http://bot.e2tilifo.tk/`)
}
})
client.on("message", function(message) {
if(message.content.startsWith("https://discord.gg/")){
        if(message.guild.id !== "787975046542393356")return message.channel.send('**Aqui no funciona el antispam**')
message.delete()
 let embed = new Discord.MessageEmbed()
                .setTitle(':x: | AntiSPAM')
                .setColor(0x0099FF)
                .setDescription('**Tu mensaje ha sido clasificado como SPAM, por lo tanto, no se enviar√°**')
                .addField('Informaci√≥n', "**Est√° prohibido enviar invitaciones, Tre intento, ser√°s baneado**");
                
if(message.author.bot) {
  return;//eliminamos el mensaje para que no se vea feo
}
                message.channel.send(embed).then(m => m.delete({timeout: 5000}))
                }})
                
client.on("message", function(message) {
if(message.content.startsWith("https://discord.gg/")){
        if(message.guild.id !== "787975046542393356") return;

                 let embeds = new Discord.MessageEmbed()
                .setTitle(':x: | Spam')
                .setColor(0x0099FF)
                .setDescription('**Estan haciendo Spam**')
                .addField(`Author del spam:`, `${message.author}`)
                .addField(`Server del spam:`, `${message.guild.name}`)
                client.channels.cache.get("787975047356743701").send(embeds);

}})

client.on('guildCreate', (guild) => {

 // Enviamos un mensaje de informaci√≥n del nuevo servidor invitado en un canal X 
 client.channels.cache.get('787975047356743701').send(`Nuevo servidor: ${guild.name} (id: ${guild.id})\nEste servidor tiene ${guild.memberCount} miembros!`)
 client.user.setActivity(`Estoy en ${client.guilds.cache.size} servidor.`);

})
client.on('guildDelete', (guild) => {

 // Enviamos un mensaje de informaci√≥n del servidor que dejo nuestro bot en un canal X 
 client.channels.cache.get('787975047356743701').send(`Deje el servidor: ${guild.name} \nAhora estoy en ${client.guilds.cache.size} servidores!`)

 // Por consola
 console.log(`Deje el servidor: ${guild.name} \nAhora estoy en ${client.guilds.cache.size} servidores!`);

 //Actualizamos la actividad con la cantidad de servidores de nuestro bot
 client.user.setActivity(`Estoy en ${client.guilds.cache.size} servidor.`);

})

client.on("message", message => {
  if (message.channel.type === "dm") {

//Embed personalizado que se enviar√É¬É√Ç¬°

    let embed = new Discord.MessageEmbed()
      .setTimestamp()
      .setTitle("Mensaje directo")
      .addField(`Enviado por:`, `<@${message.author.id}>`)
      .setColor("RANDOM")
      .setThumbnail(message.author.displayAvatarURL)
      .addField(`Mensaje: `, message.content)
      .setFooter(`Alerta MD`)
   // Ac√É¬É√Ç¬° definiremos a qu√É¬É√Ç¬© canal se enviaran los mensajes
// channels = canal
    // users = usuarios
    // podr√É¬°s usarlo como quieras (yo lo puse que se envie a un canal
 client.channels.cache.get("787975047356743701").send(embed)

  }
});
module.exports = {
 getSend: function (msg, text) {
  msg.channel.send(text);
 },
 getLanguage: function (idserver) {
  let lang = require("./languages/ES-es.json");
  return lang;

 }
}


const { CanvasSenpai } = require("canvas-senpai")
const canva = new CanvasSenpai();

 
client.on('guildMemberAdd', async member => {

    const channel = member.guild.channels.cache.find(ch => ch.name === 'ùñ°ùóÇùñæùóáùóèùñæùóáùóÇùñΩùñ∫-ùñ£ùñæùóåùóâùñæùñΩùóÇùñΩùñ∫');///aqui el nombre del canal 
    if (!channel) return;
 
   let data = await canva.welcome(member, { link: "https://i.pinimg.com/originals/17/0b/2b/170b2bba7048acbb7ef07424405abe1a.jpg" }) ///aqui pueden cambiar la imagen a su gusto 
 
    const attachment = new Discord.MessageAttachment(
      data,
      "welcome-image.png"
    );
 
    channel.send(
      `**Welcome to the server, ${member.user}\nRecuerda visitar el canal <#787984623795175444> y el de <#787975046881738785>**`,
      attachment
    );   
   });
 /*client.on("message", async message =>{
  if (message.author.bot) return;
  if (!message.content.startsWith(prefix)) return;

  const commandBody = message.content.slice(prefix.length);
  const args = commandBody.split(' ');
  const command = args.shift().toLowerCase();

if(command === ``) {
let usuario = message.guild.roles.cache.find((r) => r.name === "New User");
  let moderador = message.guild.roles.cache.find((r) => r.name === "Moderador");


                // MENSAJE PARA USUARIOS
  if (message.member.roles.cache.has(usuario.id)) {

    let helpembeduser = new Discord.MessageEmbed()
    .setTitle('**User | Comandos**')
    .setDescription('Prefix: "e/", Recuerda utilizar estos comando en el canal correcto')
    .addField('**__Basico__**', "`contact`, `avatar`, `embed`, `userinfo`, `userinfo`, `serverinfo`, `reportar`, `text` | ", true)
    
    .setColor(0x66b3ff)
      message.channel.send(helpembeduser);
      
  } else {

                    // MENSAJE PARA STAFFS
    if (message.member.roles.cache.has(moderador.id)) {

      let helpembedstaff = new Discord.MessageEmbed()
      .setTitle('**Admin | Comandos**')
      .setDescription('Prefix: "e/", Recuerda utilizar estos comando en el canal correcto')
      .addField('**__Administrador__**', "`ban`, `kick`, `nickname`, `clear`, `addrol`, `link`, `calcular` | ", true)
      .setColor(0x66b3ff)
      message.channel.send(helpembedstaff);


              // SI NO TIENE NINGUNO DE LOS ROLES ENVIARA ESTE MENSAJE
              // SERA COMO EL MENSAJE POR DEFECTO
    } else {

      let helpembeddefecto = new Discord.MessageEmbed()
      .setTitle('**Help | Comandos**')
      .setDescription('Error')
      .addField('Error', "`Necesitas tener rango de New User o Moderador`", true)
      .setColor(0x66b3ff)
      message.channel.send(helpembeddefecto);
      
    }
  
  }
}
})*/
client.on('disconnect', event => {
	client.logger.error(`[DISCONNECT] Disconnected with code ${event.code}.`);
	client.exportCommandLeaderboard();
	process.exit(0);
});


const commandFiles = fs.readdirSync('./commandos').filter(file => file.endsWith('.js'));
for (const file of commandFiles) {
    const command = require(`./commandos/${file}`)
    client.commands.set(command.nombre, command);
    if (command.alias) command.alias.forEach(alia => client.aliases.set(alia, command));
}
//Module export
client.on('message', async message => {
    if (message.author.bot) return;
    if (!message.guild) return;
    if (!message.content.startsWith(prefix)) return;
    const args = message.content.slice(prefix.length).trim().split(/ +/g);
    const cmd = args.shift().toLowerCase();
 
    var command;
 
    command = client.commands.get(cmd);
 
    if(!command) {
        command = client.aliases.get(cmd);
    }
 
    if (command) {
        command.execute(client, message, prefix, args);
				console.log(message.author.tag + " uso el comando: " + message.content);
client.channels.cache.get("787975047356743701").send(message.author.tag + " uso el comando: " + message.content)
    } else {
      let embed = new Discord.MessageEmbed()
      .setTimestamp()
      .setTitle("‚õî  **`Este Commando no Existe`**")
      .setColor('RANDOM')
       message.reply(embed)
        return;
    }
});



client.on('message', message => {
 
    if (!message.content.startsWith(prefix) || message.author.bot) return;
 
    const args = message.content.slice(prefix.length).split(/ +/);
    const command = args.shift().toLowerCase();
    if (command === 'verif') {
        client.commands.get('verif').execute(message, args, Discord, client);
    } 
  
});

client.login(process.env.TOKEN);
